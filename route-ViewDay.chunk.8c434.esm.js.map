{"version":3,"sources":["webpack:///./routes/ViewDay/ViewDay.tsx","webpack:///./routes/ViewDay/style.css","webpack:///./solutions/01/index.tsx","webpack:///./solutions/index.ts","webpack:///./routes/ViewDay/components/ShowCodeButton/ShowCodeButton.tsx","webpack:///./routes/ViewDay/index.ts"],"names":["ViewDay","day","dayString","match","Number","parseDay","part","useStore","s","useEffect","setDay","solution","days","class","style","container","url","external","plain","compact","ariaLabel","name","Part1","Part2","buttons","onClick","setPart","classNames","navButtons","disabled","solutions","day1","ShowCodeButton","showCode","setShowCode"],"mappings":"8FAAA,8JAcA,MAOaA,EAAU,EAAGC,IAAKC,MAC7B,MAAMD,EARUC,KAChB,KAAMA,GAAa,IAAIC,MAAM,YAAW,OAAO,KAC/C,MAAMF,EAAMG,OAAOF,GAAa,KAChC,OAAID,EAAM,GAAKA,EAAM,GAAW,KACzBA,CAAG,EAIEI,CAASH,GACfI,EAAOC,aAAUC,GAAMA,EAAEF,OAM/B,GAJAG,qBAAU,KACJR,GAAKS,YAAOT,EAAI,GACnB,CAACA,KAECA,EAAK,OAAO,YAAC,IAAQ,MAC1B,MAAMU,EAAWC,IAAKX,EAAM,GAE5B,OACE,mBAAKY,MAAOC,IAAMC,WAChB,6BACOd,EAAK,IACV,YAAC,IAAM,CACLe,IAAM,qCAAoCf,IAC1CgB,UAAQ,EACRC,OAAK,EACLC,SAAO,EACPC,UAAU,+BAEV,YAAC,IAAI,CAACC,KAAK,oBAGbV,WAAUW,OAAUX,WAAUY,MAG9B,mBACE,mBAAKV,MAAOC,IAAMU,UACfb,aAAQ,EAARA,EAAUW,QACT,YAAC,IAAM,CAACG,QAAS,IAAMC,YAAQ,IAAG,WAEnCf,aAAQ,EAARA,EAAUY,QACT,YAAC,IAAM,CAACE,QAAS,IAAMC,YAAQ,IAAG,UAEpC,YAAC,IAAc,OAEjB,YAAC,IAAU,CAACzB,IAAKA,IAChBU,GAAYL,EACX,mBAAKO,MAAOC,IAAMH,UAChB,YAAC,IAAQ,CAACA,SAAUA,EAAUL,KAAMA,KAEpC,MAjBN,4BAAQL,EAAG,2BAoBb,mBAAKY,MAAOc,YAAWb,IAAMU,QAASV,IAAMc,aAC1C,YAAC,IAAM,CACLZ,IAAM,MAAIf,EAAM,GAChBiB,OAAK,EACLW,SAAU5B,GAAO,EACjBmB,UAAU,gBAEV,YAAC,IAAI,CAACC,KAAK,kBAEb,YAAC,IAAM,CACLL,IAAM,KAAIf,EAAM,IAChBiB,OAAK,EACLW,SAAU5B,GAAO,GACjBmB,UAAU,YAEV,YAAC,IAAI,CAACC,KAAK,oBAGX,C,kECpFK,KAAC,UAAY,mBAAmB,QAAU,iBAAiB,WAAa,oBAAoB,KAAO,c,gJCG3G,MAAMC,EAAQ,IAAM,oCAEdC,EAAQ,IAAM,oCCIZO,IAFe,CAACC,E,8GCJxB,MAAMC,EAAiB,KAC5B,MAAMC,EAAW1B,aAAUC,GAAMA,EAAEyB,WACnC,OACE,YAAC,IAAM,CAACR,QAAS,IAAMS,aAAaD,GAAWf,OAAK,GACjDe,EAAW,YAAc,YACnB,C,oCCTb,gE","file":"route-ViewDay.chunk.8c434.esm.js","sourcesContent":["import { h, Fragment } from 'preact'\nimport { useEffect } from 'preact/hooks'\nimport { Button, CodeViewer, Icon, Solution } from '/components'\nimport days, { Solution as SolutionType } from '/solutions'\nimport { setDay, setPart, useStore } from '/store'\nimport NotFound from '../NotFound'\nimport { ShowCodeButton } from './components'\nimport style from './style.css'\nimport { classNames } from '/shared/web-utilities/util'\n\ninterface Props {\n  day?: string\n}\n\nconst parseDay = (dayString?: string) => {\n  if (!(dayString || '').match(/^\\d*$/u)) return null\n  const day = Number(dayString || '1')\n  if (day < 1 || day > 25) return null\n  return day\n}\n\nexport const ViewDay = ({ day: dayString }: Props) => {\n  const day = parseDay(dayString)\n  const part = useStore((s) => s.part)\n\n  useEffect(() => {\n    if (day) setDay(day)\n  }, [day])\n\n  if (!day) return <NotFound />\n  const solution = days[day - 1] as SolutionType | undefined\n\n  return (\n    <div class={style.container}>\n      <h1>\n        Day {day}{' '}\n        <Button\n          url={`https://adventofcode.com/2022/day/${day}`}\n          external\n          plain\n          compact\n          ariaLabel=\"open advent of code problem\"\n        >\n          <Icon name=\"external-link\" />\n        </Button>\n      </h1>\n      {!solution?.Part1 && !solution?.Part2 ? (\n        <p>Day {day} is not yet implemented</p>\n      ) : (\n        <>\n          <div class={style.buttons}>\n            {solution?.Part1 && (\n              <Button onClick={() => setPart(1)}>Part 1</Button>\n            )}\n            {solution?.Part2 && (\n              <Button onClick={() => setPart(2)}>Part 2</Button>\n            )}\n            <ShowCodeButton />\n          </div>\n          <CodeViewer day={day} />\n          {solution && part ? (\n            <div class={style.solution}>\n              <Solution solution={solution} part={part} />\n            </div>\n          ) : null}\n        </>\n      )}\n      <div class={classNames(style.buttons, style.navButtons)}>\n        <Button\n          url={`#/${day - 1}`}\n          plain\n          disabled={day <= 1}\n          ariaLabel=\"Previous day\"\n        >\n          <Icon name=\"chevron-left\" />\n        </Button>\n        <Button\n          url={`#/${day + 1}`}\n          plain\n          disabled={day >= 25}\n          ariaLabel=\"Next day\"\n        >\n          <Icon name=\"chevron-right\" />\n        </Button>\n      </div>\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"container__lXqO1\",\"buttons\":\"buttons__cmZ9r\",\"navButtons\":\"navButtons__Q-4cn\",\"link\":\"link__nQLWE\"};","import { h } from 'preact'\nimport { Answer } from '/components'\nimport input from './input'\n\nexport const Part1 = () => <p>Hello world</p>\n\nexport const Part2 = () => <p>Hello world</p>\n","import { FunctionComponent } from 'preact'\nimport * as day1 from './01'\n\nexport interface Solution {\n  Part1?: FunctionComponent\n  Part2?: FunctionComponent\n}\n\nconst solutions: Solution[] = [day1]\n\nexport default solutions\n","import { h } from 'preact'\nimport { Button } from '/components'\nimport { setShowCode, useStore } from '/store'\n\nexport const ShowCodeButton = () => {\n  const showCode = useStore((s) => s.showCode)\n  return (\n    <Button onClick={() => setShowCode(!showCode)} plain>\n      {showCode ? 'Hide code' : 'Show code'}\n    </Button>\n  )\n}\n","export { ViewDay as default } from './ViewDay'\n"],"sourceRoot":""}